import np as np
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
import math
import matplotlib.mlab as mlab
from scipy.stats import norm

alist=[]

for i in range(5):
    alist.append(1)
for i in range(18):
    alist.append(2)
for i in range(1277):
    alist.append(3)
for i in range(1588):
    alist.append(4)
for i in range(1217):
    alist.append(5)
for i in range(1048):
    alist.append(6)
for i in range(1481):
    alist.append(7)
for i in range(1539):
    alist.append(8)
for i in range(996):
    alist.append(9)
for i in range(1173):
    alist.append(10)
for i in range(1580):
    alist.append(11)

# [5,18,1277,1588,1217,1048,1481,1539,996,1173,1580]
x = np.array(alist)# 这里填入你的数据list 如果已经是array格式就不用转化了
# n, bins, patches = plt.hist(x, 20, density=1, facecolor='blue', alpha=0.75)  #第二个参数是直方图柱子的数量
mu =np.mean(x)  # 计算均值
sigma = np.std(x)
num_bins = 30  # 直方图柱子的数量
n, bins, patches = plt.hist(x, num_bins, density=1, alpha=0.75)
# 直方图函数，x为x轴的值，normed=1表示为概率密度，即和为一，绿色方块，色深参数0.5.返回n个概率，直方块左边线的x值，及各个方块对象
y = norm.pdf(bins, mu, sigma)  # 拟合一条最佳正态分布曲线y

plt.grid(True)
plt.plot(bins, y, 'r--')  # 绘制y的曲线
plt.xlabel('values')  # 绘制x轴
plt.ylabel('Probability')  # 绘制y轴
plt.title('Histogram : $\mu$=' + str(round(mu, 2)) + ' $\sigma=$' + str(round(sigma, 2)))  # 中文标题 u'xxx'
# plt.subplots_adjust(left=0.15)#左边距
plt.show()
